from contextlib import asynccontextmanager
from fastapi import FastAPI
import uvicorn

from api import api_router
from services.qdrant_service import QdrantService


@asynccontextmanager
async def lifespan(app: FastAPI):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    # Startup
    print("üöÄ –ó–∞–ø—É—Å–∫ AI Summary Service...")
    try:
        qdrant_service = QdrantService()
        await qdrant_service._ensure_collection_exists()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Qdrant —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Qdrant: {e}")
        raise
    
    yield
    
    # Shutdown
    print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...")


# –°–æ–∑–¥–∞–Ω–∏–µ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(
    title="AI Summary Service",
    description="–°–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–∂–∏–º–æ–∫ –∏–∑ –∞—É–¥–∏–æ, –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ Qdrant",
    version="1.0.0",
    lifespan=lifespan
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º API —Ä–æ—É—Ç—ã
app.include_router(api_router)


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ AI Summary Service...")
    uvicorn.run(
        "main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    )
